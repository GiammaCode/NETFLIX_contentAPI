# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app import util


class Film(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, title: str=None, actors: int=None, release_year: int=None, genre: str=None, rating: float=None):  # noqa: E501
        """Film - a model defined in Swagger

        :param id: The id of this Film.  # noqa: E501
        :type id: int
        :param title: The title of this Film.  # noqa: E501
        :type title: str
        :param actors: The actors of this Film.  # noqa: E501
        :type actors: int
        :param release_year: The release_year of this Film.  # noqa: E501
        :type release_year: int
        :param genre: The genre of this Film.  # noqa: E501
        :type genre: str
        :param rating: The rating of this Film.  # noqa: E501
        :type rating: float
        """
        self.swagger_types = {
            'id': int,
            'title': str,
            'actors': int,
            'release_year': int,
            'genre': str,
            'rating': float
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'actors': 'Actors',
            'release_year': 'release_year',
            'genre': 'genre',
            'rating': 'rating'
        }
        self._id = id
        self._title = title
        self._actors = actors
        self._release_year = release_year
        self._genre = genre
        self._rating = rating

    @classmethod
    def from_dict(cls, dikt) -> 'Film':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Film of this Film.  # noqa: E501
        :rtype: Film
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Film.

        Film's ID  # noqa: E501

        :return: The id of this Film.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Film.

        Film's ID  # noqa: E501

        :param id: The id of this Film.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Film.

        Film's title  # noqa: E501

        :return: The title of this Film.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Film.

        Film's title  # noqa: E501

        :param title: The title of this Film.
        :type title: str
        """

        self._title = title

    @property
    def actors(self) -> int:
        """Gets the actors of this Film.

        return actorID in the films  # noqa: E501

        :return: The actors of this Film.
        :rtype: int
        """
        return self._actors

    @actors.setter
    def actors(self, actors: int):
        """Sets the actors of this Film.

        return actorID in the films  # noqa: E501

        :param actors: The actors of this Film.
        :type actors: int
        """

        self._actors = actors

    @property
    def release_year(self) -> int:
        """Gets the release_year of this Film.

        year of release  # noqa: E501

        :return: The release_year of this Film.
        :rtype: int
        """
        return self._release_year

    @release_year.setter
    def release_year(self, release_year: int):
        """Sets the release_year of this Film.

        year of release  # noqa: E501

        :param release_year: The release_year of this Film.
        :type release_year: int
        """

        self._release_year = release_year

    @property
    def genre(self) -> str:
        """Gets the genre of this Film.

        type of film  # noqa: E501

        :return: The genre of this Film.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre: str):
        """Sets the genre of this Film.

        type of film  # noqa: E501

        :param genre: The genre of this Film.
        :type genre: str
        """

        self._genre = genre

    @property
    def rating(self) -> float:
        """Gets the rating of this Film.

        film's rating (from 1 to 10)  # noqa: E501

        :return: The rating of this Film.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this Film.

        film's rating (from 1 to 10)  # noqa: E501

        :param rating: The rating of this Film.
        :type rating: float
        """

        self._rating = rating

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app import util


class Actor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, surname: str=None, date_of_birth: date=None, films: int=None):  # noqa: E501
        """Actor - a model defined in Swagger

        :param id: The id of this Actor.  # noqa: E501
        :type id: int
        :param name: The name of this Actor.  # noqa: E501
        :type name: str
        :param surname: The surname of this Actor.  # noqa: E501
        :type surname: str
        :param date_of_birth: The date_of_birth of this Actor.  # noqa: E501
        :type date_of_birth: date
        :param films: The films of this Actor.  # noqa: E501
        :type films: int
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'surname': str,
            'date_of_birth': date,
            'films': int
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'surname': 'surname',
            'date_of_birth': 'dateOfBirth',
            'films': 'films'
        }
        self._id = id
        self._name = name
        self._surname = surname
        self._date_of_birth = date_of_birth
        self._films = films

    @classmethod
    def from_dict(cls, dikt) -> 'Actor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Actor of this Actor.  # noqa: E501
        :rtype: Actor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Actor.

        Actor's ID  # noqa: E501

        :return: The id of this Actor.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Actor.

        Actor's ID  # noqa: E501

        :param id: The id of this Actor.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Actor.

        Actor's first name  # noqa: E501

        :return: The name of this Actor.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Actor.

        Actor's first name  # noqa: E501

        :param name: The name of this Actor.
        :type name: str
        """

        self._name = name

    @property
    def surname(self) -> str:
        """Gets the surname of this Actor.

        Actor's surname  # noqa: E501

        :return: The surname of this Actor.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname: str):
        """Sets the surname of this Actor.

        Actor's surname  # noqa: E501

        :param surname: The surname of this Actor.
        :type surname: str
        """

        self._surname = surname

    @property
    def date_of_birth(self) -> date:
        """Gets the date_of_birth of this Actor.

        Actor's birthdate  # noqa: E501

        :return: The date_of_birth of this Actor.
        :rtype: date
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth: date):
        """Sets the date_of_birth of this Actor.

        Actor's birthdate  # noqa: E501

        :param date_of_birth: The date_of_birth of this Actor.
        :type date_of_birth: date
        """

        self._date_of_birth = date_of_birth

    @property
    def films(self) -> int:
        """Gets the films of this Actor.

        List of filmIDs that the actor has performed in  # noqa: E501

        :return: The films of this Actor.
        :rtype: int
        """
        return self._films

    @films.setter
    def films(self, films: int):
        """Sets the films of this Actor.

        List of filmIDs that the actor has performed in  # noqa: E501

        :param films: The films of this Actor.
        :type films: int
        """

        self._films = films
